buildscript {
    dependencies {
        classpath group: 'org.yaml', name: 'snakeyaml', version: '1.24'
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'checkstyle'
    id 'java-library'
    id 'jacoco'
    id 'com.jfrog.bintray' version "1.8.4"
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
    id 'org.springframework.boot' version '2.1.3.RELEASE' apply false
    id 'org.owasp.dependencycheck' version '3.3.2'
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'org.sonarqube' version '2.6.2'
}

checkstyle {
    maxWarnings = 0

    toolVersion = '8.18'
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    configDir = new File(rootDir, 'config/checkstyle')
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'false' ? 11 : 0
    suppressionFile = 'dependency-check-suppressions.xml'
    analyzers {
        // Disable scanning of .NET related binaries
        assemblyEnabled = false
    }
}

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://dl.bintray.com/hmcts/hmcts-maven"
    }
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }

    dependencies {
        // checkstyle needs a certain version and so does spring fox swagger, so can't use latest
        // fun times...
        dependencySet(group: 'com.google.guava', version: '20.0') {
            entry 'guava'
        }
        // solves CVE-2019-12086
        // remove once spring manager incorporates this changes
        dependencySet(
                group: 'com.fasterxml.jackson.core',
                version: '2.9.9'
                //version: dependencyManagement.importedProperties['jackson.version'] solves CVE-2019-12086
        ) {
            entry 'jackson-core'
            entry 'jackson-databind'
        }
        dependencySet(
                group: 'com.fasterxml.jackson.datatype',
                version: '2.9.9'
                //version: dependencyManagement.importedProperties['jackson.version'] solves CVE-2019-12086
        ) {
            entry 'jackson-datatype-jdk8'
            entry 'jackson-datatype-jsr310'
        }
        dependencySet(
                group: 'com.fasterxml.jackson.module',
                version: '2.9.9'
                //version: dependencyManagement.importedProperties['jackson.version'] solves CVE-2019-12086
        ) {
            entry 'jackson-module-parameter-names'
        }
    }
}

def fileVersion = new org.yaml.snakeyaml.Yaml().load(new File("VERSION.yaml").newInputStream())

group = 'uk.gov.hmcts.reform.cmc'
version = fileVersion.TAG

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.8'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-json'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter'
    compile group: 'com.google.guava', name: 'guava', version: '20.0'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.6'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.12.2'
}

jar {
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

task printVersion {
    doLast {
        print project.version
    }
}

def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "http://www.opensource.org/licenses/mit-license.php"
            distribution "repo"
        }
    }

    scm {
        url "https://github.com/hmcts/cmc-ccd-domain"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        Main(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId 'ccd-domain'
            version project.version

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Domain associated with money claim in ccd')
                root.appendNode('name', 'Money Claim CCD Domain')
                root.appendNode('url', 'https://github.com/hmcts/cmc-ccd-domain')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['Main']
    publish = true
    pkg {
        repo = 'hmcts-maven'
        name = 'ccd-domain'
        userOrg = 'hmcts'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/hmcts/cmc-ccd-domain'
        version {
            name = project.version
        }
    }
}
